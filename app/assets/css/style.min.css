/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}header{position:relative;background:linear-gradient(#1b2935,#23446a)}header .facebook-icon{position:absolute;top:8px;left:380px;padding:9px 10px 0 15px}header .donate{position:absolute;top:14px;right:0}header .bhs-logo{position:absolute;top:0;left:10px;z-index:2;-webkit-animation-duration:3s;animation-duration:3s;-webkit-animation-name:a;animation-name:a}@-webkit-keyframes a{0%{top:-200px;left:10px}to{top:0;left:10px}}@keyframes a{0%{top:-200px;left:10px}to{top:0;left:10px}}.search-container{width:25%;height:37px;background-color:#fff 50%;border:1px solid red;display:none}.search-container .search-input{background-color:transparent;border:medium none;color:#fff;float:left;font-size:.9em;height:auto;margin:8px 5px 0 12px;width:185px}.top-header{background:linear-gradient(#1b2935,#23446a);color:#fff}.top-nav{font-size:.9em;padding:20px 0 30px 125px}.top-nav li{float:left;list-style:none}.top-nav span{padding:0 10px;color:#fff}.top-nav a{color:#fff;text-decoration:none}nav.main-nav{background-color:#fbfbfb;border-top:20px solid #666;border-bottom:20px solid #666;height:80px;text-transform:uppercase;border-radius:0;font-size:.9em}nav.main-nav li{margin-right:2%}nav.main-nav li:before{content:"|"}nav.main-nav li:first-child:before{content:" "}.nav.nav-justified{padding-left:125px;margin-top:10px}.nav.nav-justified a{width:10%;color:#000;text-decoration:none;display:inline}.navbar-toggler,aside{float:right}aside{height:auto;margin-left:0;border:1px solid red}aside .img-fluid.img-date{width:25%;margin:5px 0 5px 60%}.fbimg{max-width:238px;max-height:auto}.testimonials{color:#fbfbfb;background-color:#173f6b;padding:5px;position:relative;height:30px}.test{position:absolute;top:0;left:-22px;z-index:1}.orange{width:100%;margin:5px 0;display:block}.aside-text{padding:5%}body{background:linear-gradient(#1b2935,#23446a);padding:0;margin:0}.content{width:100%;margin:0 auto;background-color:#fbfbfb;padding:0}.services{font-family:serif;display:inline;text-align:left;margin-left:12px}.column-container{padding:10px;width:100%}.column-container h2{text-align:left;font-family:serif;color:#666;font-size:2em;width:90%;padding-top:10px;border-bottom:1px solid #666}.column-container p{margin:0;font-size:.85em;padding-bottom:30px}.column-container div.body-text{float:left;width:50%;padding-right:10px}.column-container .strong{color:#173f6b}img.img-date{width:100%}footer{background-color:#133055}footer div{display:inline;margin:15px 0;color:#fbfbfb;font-size:.7em;border-left:1px solid #091f37}footer div h4{background-color:#091f37;color:#fbfbfb;text-align:center;font-size:2em;padding:.5em}footer div.logos-footer{padding:0;width:215px}footer div.logos-footer img{margin:5px;display:inline-block}footer .footer-first{border-left:0}footer li{list-style-type:circle;margin-left:5%}.copyright{color:#fff;font-size:12px;text-align:center;padding-top:10px}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media screen and (max-width:767px){.column-container div.body-text{display:block;width:100%}aside{padding:0}.testimonials{width:100%}.testimonials img{display:none}}@media screen and (max-width:992px){header .donate,header .facebook-icon{display:none}.navbar-toggler{visibility:visible}.column-container div.body-text{display:block;width:100%}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;base64, */
